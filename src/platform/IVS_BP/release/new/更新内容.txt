2012-11-14 10:20:00
   更新数据库操作无效以及select失败问题
   
2012-11-14 10:20:00  
    心跳保活机制修改
    nss_def.h和nss_mt.h整改
    数据库架构调整，改成单例模式
	
2012-11-15 22:00:00
    连接状态上报时，参数中包括对端IP和端口号
    ace头文件文件夹修改为ACE_wrappers
	
2012-11-16 20:00
    连接状态上报时，参数中包括对端IP和端口号修复
    environment.h一系列的接口加上extern "C"
    数据库exChar崩溃问题修复
    INetElement::HandleSendCmd(CCmd* pCmd)里的日志崩溃问题修复
    日志里，修改日志内容参数为const char*
	
2012-11-17 16:38
    ThreadID传递的时候一直都是ACE_thread_t,除了这个接口，结果导致在64位Linux下通过ThreadID找Thread的时候找不到
    修复删除多余日志问题
	
2012-11-19 19：00
    修复使用同一个LinkID多次注册崩溃问题
    CreateClientLink我新增了一个参数bNeedSwitchId，指定是否用对端的ID来更新本端持有连接的ID
	
2012-11-20 20:00
    上传openssl和sftp的linux库
    同步消息发送加上超时时间，默认为5秒
    新增加密部分
	
2012-11-21 13:30
    更新bp_security的linux版本库libSecurity.so，前版本有问题

2012-11-21 14:30
    更新bp_security的linux版本库libSecurity.so，前版本有问题，
    因为要用到别的.so，所以，一并更新下，否则没法用
		
2012-11-21 16:55
    同步消息发送加入超时或发送判断，防止内存泄露
    xml解析方法CNssXMLMsg::decodeStream修改，即使消息里只有消息头无消息体，也返回成功
	
2012-11-22 16:30
    Printer会叠加之前查询出来的数据到自己的buffer里，现改成用string保存stream里的数据
    FindElemEx问题修复
    SessionMgr里加入了RoutingAll，ISession里的Routing定义为纯虚函数

2012-11-22 17:30
    之前的Makefile有问题, 编译出来的libSecurity.so会有问题, 修改了
	
2012-11-23 22:26
    动态增加IP鉴权日志修改，否则崩溃
	增加网元类型 #define NET_ELE_SUB_SCU_NSS 90105
	
2012-11-24 17:30
	修改网元类型 #define NET_ELE_SUB_SMU_NSS 90105
	解决多个连接出现连接断开的问题
	
2012-12-10 12:00
	1.transID不能为空，包括dispatch的所有接口，为空则发送将会失败

	2.消息发送成功或失败都不再处理pMsgBlock，pCmd，BP内部将会处理，且现在入参类型修改为指针应用，函数返回后，
	  该类指针都会是NULL，请不要再使用，否则会造成崩溃

	3.日志整改，详细请看我之前发送过的邮件（搜索：日志整改通知），不修改的话，会造成编译不通过

	4.ServiceID不能再写死为Commu_serviceID，后续响应消息的处理都会使用发送时建立的Transaction里的信息，所以
      发送消息的ServiceID应该写上发送者的ServiceID，否则会造成响应消息不能转发到对应的service处理，根据此改动，
      service.xml的配置里，可以不配接收的响应消息和发送出去的请求消息，只需要配接受到的请求消息即可，当然配了也
      不会有错

	5.网元设备编码长度修改为40

	6.开源库版本更新：根据SE的要求，开源库更新到指定版本
		libssh--------------21.4.2
		libgpg-error--------1.10
		libgcrypt-----------1.5.0

	7.XML.GetElementValue的修改：根据开发的意见，现在该方法修改为节点为空，返回空字符串（“”）
      相应的，GetElementValueEx修改为，节点为空，返回空字符串（“”），节点不存在，返回NULL


	8.部分码流加密、随机数生成、密码强度检测、口令自动生成、防SQL注入、异或以及一些字符转换的小功能函数，都从bp_security移到了bp_base
      对应文件：
      aes256_ctr_partial.h/.cpp
      bp_security_misc.h/.cpp
      bp_random.h/.cpp
      bp_string_conversion.h/.cpp

      防DoS攻击的实现在bp_net的
      avoid_dos_attack.h/.cpp中
	
2012-12-10 23:01
	1.临时的LinkID使用随机字符串
    2.建立间接的时候，pLink->open不再判断返回值，由于是非阻塞式的
	3.IVS_strcasecmp头文件修改
	
2012-12-12 18:50
	1.ISession里添加ServiceID的get set方法
	2.启动是，当建立service成功后，加入service->init()的调用
	3.windows monitor发布（linux还没好）
	4.bp_log.h里添加头文件ivs_error.h
	5.将bp_security_client.h/.cpp和bp_security_server.h/.cpp从bp_security移到bp_net
    6.将bp_random.h/.cpp和bp_string_conversion.h/.cpp从bp_base移回到bp_security,并分别改名为:bp_security_random.h/.cpp和bp_security_string_conversion.h/.cpp
    7.bp_security中增加bp_security_memory.h,这里定义了一组与bp_base类似的管理内存的宏从而使bp_security彻底去除对bp_base的依赖
    8.修改GeneratePassword的接口
		   
2012-12-20
	1、各模块日志文件名
	   先前日志文件名称不符合 可服务性特性要求，需做调整。各个模块需要赋值CMainCtrl类的m_ModuleType、m_NodeCode，
	   前者为模块类型（如OMU,SMU,SCU） ，后者为前模块对应的机器编号，须在子类构造函数中更新赋值,不修改使用默认

	2、将“DB.xml”配置文件中的密码要以密文形式保存
	   先前数据库访问密码已明文方式保存，调整为密文保存。密文生成工具已写好，会和BP包一起发布
	   
	3、“DB.xml”配置文件中新增公用连接池大小poolsize配置参数
	   先前公用连接池是不受限，现调整为所有公用连接从连接池中获取，且连接数目在初始化时固定。
	   该项必须修改，参考BP里的xml模板
	   
	4. 连接状态上报增加重载，通过结构体，头文件加入了ILink.h，所以各个组件的mainctrl要包含bp_net文件夹和third\openssl\include文件夹。
	   旧的接口还能使用，建议使用新的接口，新接口包含了更多的信息
		
	5. 守护进程Linux和Windows版本完成，支持关闭进程和重启进程功能，该功能通过process.xml实现，请参考BP工程里的xml模板

	6. int dispatcherMsgIn(CCmd* &pCmd, bool bWithTransation, uint32_t uiTimeout); 
			   增加两个参数，bWithTransation 是否需要创建Transaction；uiTimeout ： 如果需要创建Transation，该transaction的超时时间;
	   dispatcherMsgIn , 修改为两个函数 dispatcherInWithTransaction（要求底层创建Transaction）  dispatcherInWithoutTransaction（要求底层不创建Transaction）
			   创建Transaction时，增加了超时参数，默认30秒超时，目前超时检查还没实现；
		   
	   int dispatcherMsgOut(CCmd* &pCmd, bool bWithTransation, uint32_t uiTimeout); 
			   增加两个参数，bWithTransation 是否需要创建Transaction；uiTimeout ： 如果需要创建Transation，该transaction的超时时间;
	   dispatcherMsgOut , 修改为两个函数 dispatcherOutWithTransaction（要求底层创建Transaction）  dispatcherOutWithoutTransaction（要求底层不创建Transaction）
			   创建Transaction时，增加了超时参数，默认30秒超时，目前超时检查还没实现；
	   该改动会涉及到所有组件发送消息接口的改动，对所有组件影响较大

	7. 通讯线程的模式标记为改为false，不然会一直占用CPU

	8. 操作日志和安全日志的入库增加开关，默认关闭，配置文件模板请看BP内部的

	9. 增加同步连接接口,该接口注意超时时间不能设置为0，否则返回失败
	   异步创建连接接口的超时时间改为0

	10. log里增加了sftp库，windows需要加入sftp的头文件，linux编译时要增加sftp库的连接
	
2012-12-21 16:20
	1. 接受nss消息的缓存长度改为5M（以前为1M）
	
	2. 修复moduleName过短造成的崩溃
	
2012-12-22 10:50
	1. monitor实现linux和windows下的warn文件生成
	
	2. 修复日志入库linux下的字段不一致问题
	
2013-01-09 11:20
	1. 密钥交换增加key
	
	2. 创建连接增加setTransID
	
2013-01-21 11:00
	1. 增加流控功能
	
	2. 第三方库移动到CBB里
	
	3. xml移动到CBB里
	
	4. 日志里的模块名称和模块编号修改为从配置文件里读取
	
	5. 增加密钥协商时的透传需要的参数
	
	6. 增加黑名单功能
	
	7. Transaction和Session增加最大值限制（200W和20W，其中，前者为全局的，后者为对一个service的）
          
	8. 新增service发送消息接口dispatchMsgBetweenService（带路由关系的，不带路由的可以直接用dispatchMsgInWithoutTransaction）
	
2013-01-22 14:30
	1. SessionMgr增加锁
	
	2. 打日志的接口的锁位置往后移，要先判断日志是否已经初始化过
	
2013-01-23 14:30
	1. 日志过长会造成数据越界
	
	2. 黑名单析构是没有初始化iter
	
	3. 连接关闭上报改成原链接没有连上（交换LinkID之后）则不上报

2013-01-23 17:30
	1. 增加消息压缩的支持

2013-01-30 10:30
	1. 流控修改
	
	2. 日志配置项名称修改
	
	3. 增加同步发送接口
	
	4. 增加日志告警
	
	5. 增加告警重发机制

2013-02-02 09:00
	1. 应SMU需求, 密钥协商的类中增加返回底层AES对象副本的方法, 与之前版本兼容

2013-02-05 11:30
	01. 增加代码防止日志文件未写满就改名, 应对用户删除部分或全部日志内容的情形

	02. 修改IVS_LogClean()中SftpTransferClean()的调用时机, 防止异常

	03. 在直接写文件的函数外加上一个新的锁 (防止不同用户线程同时写文件)

	04. 严重级别的日志直接写文件(实际实现为先写入缓冲, 再立即刷新缓存)
            (以致又要加一个锁, 刷新缓冲时才加锁)

	05. 当debug日志设定为不缓存时, 缓存N条debug日志，
            当有致命错误出现时，输出此N条debug日志

	06. 日志根目录支持多级目录

	07. 日志修改，增加告警恢复

	08. 连接关闭上报延后5s

	09. 增加动态删除建立连接的日志

	10. 修复TCPServer析构崩溃的问题

	11. GenerateUUID修改为static

2013-02-05 15:30
	1. 修改日志命名方式, 增加对空NodeCode的支持

2013-02-22 19:30
	1. 增加支持: 不配置安全和操作日志时, 就不生成相应的目录及日志文件

	2. 修改日志告警回调的接口, 增加正在操作的文件名信息

	3. 修改了底层写文件的接口, 由C的write改为C++的ofstream, 加快写文件的效率

	4. 修改了BP_htonll与BP_ntohll, 以前的是错误的

	5. 密钥协商相关的所有XML都加上<Content>根节点

	6. NotifyRecv增加返回值，接受成功才算一次操作

	7. 流控恢复放在取消息

2013-02-26 02:00
	1. 增加连接已建立好的时候的异常捕获
	
	2. NetElementMgr里对map表加锁保护
	
	3. 对EAGAIN的特殊处理，超过50个则连接断开
	
	4. 对acceptor的特殊处理，当accept失败，则重启acceptor
	
	5. 数据库连接取消对操作的缓存
	
2013-03-05 15:00
	1.删除Eagain计数
    
	2.close上报需要检测是否还在第一次连接（timeout来判断）
    
	3.accept失败取消重启监听器
    
	4.timeout清理放在LinkID交换后
	
	5.先删除网元和线程的对应管理器，再删除线程管理器
	
	6.日志告警回调, 将文件名拆分为: 路径名和文件名
2013-03-11 14:25
	1. 新增批量消息同步发送接口
	
    2. 取消close延迟上报
	
    3. 重连间隔改为2s
	
    4. pid文件放到bin目录下
	
    5. 日志整改
	
	6. 修改数据库告警上报，访问失败不区分超时和断连
    
	7. MainCtr::InitLog增加一个配置日志文件根目录的参数, 默认为NULL, 为NULL时使用配置文件中的目录
2013-03-14 14:25
	1. 新增连接告警功能
	
	2. 修复addElemType问题

2013-03-18 09:00
	1. 增加数据库告警功能
	2. 增加配置告警功能

2013-03-25 09:00
	01. 数据库告警改为针对全局, 而非单个连接
	02. 数据库和日志告警, 第一次不管成功还是失败, 都要告警
	03. 重构bp_msg_resend工程
	04. 修改ivs_log在IVS_LogClean函数的一个隐患
	05. 修改ivs_log在LogFileInit函数的一个隐患, (源代码多次调用会有问题)
	06. 在mainctrl的uninit里增加dllMgr, linkstatusalarmmgr, fluxcontrolmgr的释放
	07. 把心跳消息放到link的缓存的头部, 保证心跳消息先发送
	08. 获取数据库连接的锁的范围缩小
	09. MKTransID优化代码, fixstring只在setPara调用，两个成员默认为bp和0000
	10. 同步创建连接成功后, 同步状态清空,防止重连时还是以同步的方式上报消息
	11. 增加告警信息仓库, 缓存主线程未注册能力时的告警信息


2013-03-26 09:30
	1. 日志格式中的时区信息去掉秒
	2. 延后缓冲的告警信息的处理
	3. 修改部分告警配置项的默认值

2013-03-27 15:00
	1. 日志备份目录支持多级目录
	2. CDBDriverManager::Init()增加一个默认参数, 指定数据库异常回调函数

2013-03-27 16:30
	1. 配置告警的代码修正部分配置的默认值

2013-03-28 09:00
	1. 修改部分配置项的默认值
	2. 配置文件(net.xml, service.xml)修改, 
           新增线程超时时间配置项ThreadMonitorTimeout
	3. 增加守护进程检测pid文件功能
	4. 增加线程僵死超时重启功能
	5. 密钥协商(公钥, 交换密钥)请求增加<DeviceCode>节点
	6. 修正上个版本数据库告警无效的问题
	7. 将流控配置告警改得更合理 (部分情形改为不告警)

2013-03-28 18:40
	1. 日志文件名修改成正常, (前些版本因为时区修改, 导致文件名不准确)
	2. 增加部分配置的校验
	3. 修改缓存重发的时间间隔、重发次数的默认值

2013-03-30 18:50
	1. 修改已完成日志文件列表的查找方法(增加更严格的校验)
	2. 路径相关的配置项增加更严格的校验(有效性)
	3. 修改以前版本的一处漏洞: 如果日志文件重命名失败则删除文件(以前未处理)
	4. 获取数据库连接时, 缩小锁范围, 避免一处可能的死锁

2013-04-01 18:30
	1. 密钥协商(公钥, 交换密钥)请求增加<NVRCode>节点

2013-04-02 15:40
	1. oracle连接的stream改为noCommitStream
	2. link的open态时，异常要关闭连接
	3. Transaction的析构里加try保护

2013-04-03 09:00
	1. 日志文件重命名不成功时, 改为拷贝日志, 再删除原日志的方案, 删除不成功则尝试清空
	2. 去除接口日志中的result输出
	
2013-04-07 09:00
	1. 连接告警延迟时间改为15s
	2. monitor与其他模块的日志分开
	3. 修改IsValidPathName的一个漏洞

2013-04-11 11:10
	1. 在bp_net/exchange_key_attribute.h中增加域类型的定义: enum DOMAIN_TYPE;
	2. 密钥协商增加<DomainType>可选字段, XML只有在域类型为集群时才有此字段
	3. 日志入库增加对oracle的支持

2013-04-15 13:10
	1. 修改了配置告警相关的几个小漏洞

2013-04-16 20:00
	1. 修改安全日志表字段映射问题
	2. 去除日志中终止符的写入

2013-04-23 16:20
	01. 配置告警、数据库告警代码多线程下有问题, 修改告警的代码的结构
	02. 备份日志文件名的校验代码修改得更为严格
	03. 密钥协商过程增加BP底层的日志
	04. 修改"IVS_LogClean后无法再写入日志"的问题
	05. 增加设置home目录的接口
	06. 获知消息队列大小的代码增加锁保护
	07. 流控告警消息增加TransID
	08. 修改、优化日志的上传线程的逻辑与实现
	09. 密钥协商请求消息的超时时间修改为35秒
	10. 修改消息解压处的一处错误
	11. 修改数据库连接池条件变量死锁问题
	12. Monitor日志改为不上传到服务器

2013-04-24 15:20
	1. 修复上个版本在优化上传日志文件处引发了一个BUG

2013-04-27 12:30
	1. ModifyElemValue的崩溃修改
	2. 修改clntsh的库, 版本到10.1
	3. socket机制修改, select改为epoll
	4. 消息接收机制修改, 改为不缓存到nssp的buf, 而是缓存到pmsgblock
	5. 修改getopenfilelimit实现
	
2013-05-02 14:46
    1. 修复processdata崩溃的bug
	
2013-05-04 18:30
    1. 调换了判断link的complete状态判断和routing的顺序，方式routing之后，还会使用iter
    2. socket的option修改，linger为true状态

2013-05-07 09:30
    1. 各模块日志文件权限过高,统一改为 rw-r

2013-05-07 15:30
    1. 线程管理器的锁改为递归锁
    2. 日志初始化的时候，monitor线程的句柄记录错误，修改过来
	
2013-05-08 10:50
    1. 流控管理bug修改，发送失败导致崩溃
    2. 增加service的close调用

2013-05-08 12:20
	1. ssl安全连接失败，要进入delay状态，进行超时判断或重连等机制，不能直接进入init状态
	
2013-05-17 10:00
    1. 发送流控恢复的时候，死锁问题解决
    2. 内存泄露问题
	3. 采用信号量机制，实现数据库连接的释放、获取
	4. Monitor不做操作日志和安全日志的备份

2013-05-24 10:00
    1. 日志清pclint
    2. 密钥交换，解析xml失败问题修复
	
2013-05-25 10:00
    1. 系统忙消息移动到nss协议栈里做
	
2013-06-04 12:00
    1. Monitor 修改为不忽略信号，而是定期收信号并丢弃
    2. dump文件只生成5个，删除多余的
    3. 每一个模块（如SMU，SCU等）写数据库失败，需要告警上报给OMU
	
2013-06-09 16:41
    1. 修改TQE
	
2013-06-13 12:00
	1. pid文件的权限改为读写600
	
2013-06-15 15:00
	1. 增加保证进程的唯一性功能
	
2013-06-17 17:30
	1. gmtime和localtime两函数改成线程安全的（gmtime_r和localtime_r）
	2. pgsql的异常处理，如果异常超过300次，就会把连接删除再新建，仅windows下有效
	
2013-06-09 13:00
    1. 连接放回池时，连接自动commit
	2. monitor加入300s内启动了三次，会自动退出
	3. 日志入库部分修改，加入级别的判断
	4. 打印日志线程ID长度修改为long
	
2013-06-28 10:30
    1. 编译优化取消，为0
    2. 优化commit，只能commit一次
    3. 优化dump的数量保证
    4. 安全和操作日志入库增加判断
	
2013-07-03 14:00
    1. 修复日志文件的最后一行为空格时无法切换文件的bug
	
2013-07-10 15:30
    1. 线程超时退出程序时，不用exitProcess，改为TerminalProcess

2013-07-19 19:00
    1. 通讯线程默认超时改为60s
	2. dumpprocess里取消异常捕获写dump功能
	3. 检测到线程死锁时退出进程，使用强制方式
	4. ILink日志整改
	5. SSL的建立加入2s超时
	6. Monitor里的process结构体增加锁保护
	
2013-07-23 12:30
	1. 日志上传的目录创建问题修复
	
2013-07-30 20:00
    1. 守护进程自杀使用9信号量
	2. pid文件需要清除
	
2013-08-09 16:00
    1. 修改monitor检查pid文件崩溃
	2. 优化日志
	3. 取消数据库在重连时的设置服务器名和密码
	
2013-08-22
    1. 对monitor里process结构体数组加锁保护
	2. 针对review进行修改，包括判空和异常时的内存泄露
	
2013-11-12
    1. 去除pclint、tqe告警
	2. 优化日志，避免socket重连导致的大量日志
	3. 修改了openssl的一处内存泄露

2013-11-30
    1. 去除BP_NET的.NET依赖，代码未变

2014-01-08
    1. 去除pclint中的多行屏蔽
	2. 动态创建tcp连接建立前，会先检查linkmap中是否已经存在同一个IP和端口的连接。若存在，就不再建立新连接，并将旧的连接上报给上层应用
	3. 修改了ILink.cpp、NSSP.cpp中的多处日志，增加打印错误码、linkid、IP等信息
	
2014-01-09
    1.增加一个宏SAFE_RELEASE_MB，用于释放ACE_Message_Block
	2.心跳机制修改，考虑当前时间比上次心跳更新时间还早的情况

2014-01-11
    1. 代码review后的修改：修改部分格式化不对的日志；socket缓冲区由4MB改为2MB；增加打印socket关闭是失败日志
	
2014-02-11
    1. 增加接口，可以根据IP和端口号删除连接
	
2014-02-19
    1. 清除pclint
	
2014-02-20
    1.修正日志打印格式问题
	
2014-06-24
    1.修改openssl库版本至openssl-1.0.1h